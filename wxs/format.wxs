// 封装词汇表只保留两位数字的价格方法
function priceFormat(price, number) {
  var number = number || 2;


  //如果传入的是一个字符串，parseFloat() 函数可解析一个字符串，并返回一个浮点数。
  var f_price = parseFloat(price)
  return f_price.toFixed(number)
}

//时间格式化
function dateFormat(timestmp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  timestamp = parseInt(timestmp * 1000);
  var realDate = getDate(timestmp);

  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var regYear = getRegExp("(y+)", "i");
  var reg1 = regYear.exec(format);
  if (reg1) {
    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length))

  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];
    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ? v : ("00" + v).substring(("" + v).length))
    }
  }
  return format;
  // return '2019-10-10'
}
//common.js的模块化导出的写法
module.exports = {
  priceFormat: priceFormat,
  dateFormat: dateFormat
}